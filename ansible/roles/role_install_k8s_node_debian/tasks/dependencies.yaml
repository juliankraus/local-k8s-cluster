---

# Install container runtime, CNI plugins

- name: Install containerd via apt
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - containerd
  
- name: Check if /opt/cni/bin exists
  stat:
    path: /opt/cni/bin
  register: stat_result_opt_cni_bin
  
- name: Mkdir /opt/cni/bin
  file:
    path: /opt/cni/bin
    state: directory
    mode: 0755
    owner: root
    group: root
  when: not stat_result_opt_cni_bin.stat.exists  
  
- name: Wget cni-plugins
  get_url:
    url: "{{ cni_plugins_url }}"
    dest: "/opt/cni/bin/{{ cni_plugins_url | basename }}"
    mode: 0755
    owner: root
    group: root
    checksum: "sha256:{{ cni_plugins_url }}.sha256"
  register: wget_cni_plugins

- name: Extract cni-plugins
  unarchive:
    src: "/opt/cni/bin/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz"
    dest: /opt/cni/bin/
    mode: 0755
    owner: root
  when: wget_cni_plugins.changed  

- name: Turn-off swap
  shell: swapoff -a
  
- name: Disable swap in /etc/fstab file
  shell: sed -i 's/^\/swap.img.*/#&/' /etc/fstab
  
- name: Load overlay and br_netfilter kernel module on boot
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
      
- name: Activate overlay kernel module
  modprobe:
    name: overlay
    state: present
  register: overlay_module_loaded
    
- name: Verify overlay kernel module has been loaded successfully
  shell: lsmod | grep overlay
  when: overlay_module_loaded.changed
    
- name: Activate br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present
  register: br_netfilter_module_loaded
    
- name: Verify br_netfilter kernel module has been loaded successfully
  shell: lsmod | grep br_netfilter
  when: br_netfilter_module_loaded.changed
  
- name: Set sysctl parameter for IPv4 forwarding and bridged network traffic
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
  register: sysctl_parameter

- name: Reload sysctl
  shell: sysctl --system
  when: sysctl_parameter.changed
      
- name: Verify sysctl parameter for IPv4 forwarding and bridged network traffic
  shell: sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
  register: verify_sysctl_parameter
  failed_when: verify_sysctl_parameter.rc != 0
  when: sysctl_parameter.changed
    